{
  "data": [{
    "sha": "ce4bafc322bbcf998184b39b17d8bc189aec3604",
    "filename": "README.md",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/Thatkookooguy/collect-webhook-data/blob/18719559c7742a6f55236121c7daa3fa7dda0b1c/README.md",
    "raw_url": "https://github.com/Thatkookooguy/collect-webhook-data/raw/18719559c7742a6f55236121c7daa3fa7dda0b1c/README.md",
    "contents_url": "https://api.github.com/repos/Thatkookooguy/collect-webhook-data/contents/README.md?ref=18719559c7742a6f55236121c7daa3fa7dda0b1c",
    "patch": "@@ -1 +1,3 @@\n-# collect-webhook-data\n\\ No newline at end of file\n+# collect-webhook-data\n+\n+changing file that is not a test file"
  }, {
    "sha": "8a59937017dc05e7107d6d59195564ad4fcaa93e",
    "filename": "test.js",
    "status": "added",
    "additions": 79,
    "deletions": 0,
    "changes": 79,
    "blob_url": "https://github.com/Thatkookooguy/collect-webhook-data/blob/18719559c7742a6f55236121c7daa3fa7dda0b1c/test.js",
    "raw_url": "https://github.com/Thatkookooguy/collect-webhook-data/raw/18719559c7742a6f55236121c7daa3fa7dda0b1c/test.js",
    "contents_url": "https://api.github.com/repos/Thatkookooguy/collect-webhook-data/contents/test.js?ref=18719559c7742a6f55236121c7daa3fa7dda0b1c",
    "patch": "@@ -0,0 +1,79 @@\n+describe( 'MyCtrl', function() {\n+\n+    it( 'should know the truth', function() {\n+        expect( true ).toBe( true );\n+    } );\n+\n+    //\n+    // Import modules\n+    //\n+\n+    beforeEach( module( 'MyControllersModule', 'OtherDependentModule' ) );\n+\n+    // Variables here can be set in the beforeEach() below, and can also be referenced from describe()s even further below.\n+    //  Use them for injecting known values, and also for checking the results of function calls\n+    var $scope, $controller, injectedThing;\n+    \n+    //\n+    // Do Injection\n+    //\n+    \n+    beforeEach( inject( function( _$rootScope_, _$controller_ ) {\n+        $scope = _$rootScope_.$new();\n+\n+        injectedThing = { id: 4 };  // Variable initialized above.\n+\n+        $controller = _$controller_( 'MyCtrl', {\n+            $scope: $scope,\n+            injectedThing: injectedThing\n+        } );\n+\n+    } ) );\n+\n+    //\n+    // Test each function on scope - organized via describe() blocks\n+    //\n+\n+    describe( 'initialization', function() {\n+\n+        it( 'initializes status on scope', function() {\n+            expect( $scope.targetStatus ).toBe( 'thing' );\n+        } );\n+\n+        it( 'initializes expansion status on scope', function() {\n+            expect( $scope.expanded ).toBe( false );\n+        } );\n+\n+    } );\n+\n+    describe( 'setExpanded()', function() {\n+        it( 'should set expanded to the given value', function() {\n+            $scope.expanded = false;\n+\n+            $scope.setExpanded( true );\n+\n+            expect( $scope.expanded ).toBe( true );\n+        } );\n+    } );\n+\n+    describe( 'toggleExpanded()', function() {\n+        it('should set expanded to the opposite boolean value', function() {\n+            $scope.expanded = true;\n+\n+            $scope.toggleExpanded();\n+\n+            expect( $scope.expanded ).toBe( false );\n+        })\n+    } );\n+\n+    describe( 'selectEntity()', function() {\n+        it( 'should put the given entity on scope', function() {\n+            var entity = { id: 1 };\n+\n+            $scope.selectEntity( job );\n+\n+            expect( $scope.selectedEntity ).not.toBeNull();\n+            expect( $scope.selectedEntity.id ).toBe( entity.id );\n+        } );\n+    } );\n+} );"
  }],
  "status": 200,
  "headers": {
    "access-control-allow-origin": "*",
    "access-control-expose-headers": "ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type",
    "cache-control": "private, max-age=60, s-maxage=60",
    "connection": "close",
    "content-encoding": "gzip",
    "content-security-policy": "default-src 'none'",
    "content-type": "application/json; charset=utf-8",
    "date": "Tue, 15 Jan 2019 21:07:56 GMT",
    "etag": "W/\"447c656c6f9d384387e0f0ba55b1a901\"",
    "last-modified": "Tue, 15 Jan 2019 20:34:16 GMT",
    "referrer-policy": "origin-when-cross-origin, strict-origin-when-cross-origin",
    "server": "GitHub.com",
    "status": "200 OK",
    "strict-transport-security": "max-age=31536000; includeSubdomains; preload",
    "transfer-encoding": "chunked",
    "vary": "Accept, Authorization, Cookie, X-GitHub-OTP",
    "x-content-type-options": "nosniff",
    "x-frame-options": "deny",
    "x-github-media-type": "github.v3; format=json",
    "x-github-request-id": "CA0A:2156:11EF8:266A5:5C3E4BAC",
    "x-ratelimit-limit": "5000",
    "x-ratelimit-remaining": "4990",
    "x-ratelimit-reset": "1547590025",
    "x-xss-protection": "1; mode=block"
  },
  "meta": {
    "access-control-allow-origin": "*",
    "access-control-expose-headers": "ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type",
    "cache-control": "private, max-age=60, s-maxage=60",
    "connection": "close",
    "content-encoding": "gzip",
    "content-security-policy": "default-src 'none'",
    "content-type": "application/json; charset=utf-8",
    "date": "Tue, 15 Jan 2019 21:07:56 GMT",
    "etag": "W/\"447c656c6f9d384387e0f0ba55b1a901\"",
    "last-modified": "Tue, 15 Jan 2019 20:34:16 GMT",
    "referrer-policy": "origin-when-cross-origin, strict-origin-when-cross-origin",
    "server": "GitHub.com",
    "status": "200 OK",
    "strict-transport-security": "max-age=31536000; includeSubdomains; preload",
    "transfer-encoding": "chunked",
    "vary": "Accept, Authorization, Cookie, X-GitHub-OTP",
    "x-content-type-options": "nosniff",
    "x-frame-options": "deny",
    "x-github-media-type": "github.v3; format=json",
    "x-github-request-id": "CA0A:2156:11EF8:266A5:5C3E4BAC",
    "x-ratelimit-limit": "5000",
    "x-ratelimit-remaining": "4990",
    "x-ratelimit-reset": "1547590025",
    "x-xss-protection": "1; mode=block"
  }
}
